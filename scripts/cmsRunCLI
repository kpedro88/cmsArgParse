#!/bin/bash

CMS_EXE=$(basename $0| sed 's/CLI$//')

usage(){
	echo "$(basename $0) [options] config.py [arguments]"
	exit 0
}

# display usage if no arguments provided
if [ $# -eq 0 ]; then
	usage
fi

# check for executable
if ! type $CMS_EXE >& /dev/null; then
	echo "$CMS_EXE not found"
	exit 1
fi

# find config.py & include it in the first set of options
FOUND_CONFIG=0
CONFIG_FILE=
CMS_OPTS=()
while [ "$FOUND_CONFIG" -lt 1 ] && [ $# -ne 0 ]; do
	if [[ "$1" == *".py" ]]; then
		FOUND_CONFIG=1
		CONFIG_FILE="$1"
	fi
	CMS_OPTS+=("$1")
	shift
done
CONFIG_OPTS=("$@")

# check if config.py was actually found
if [ $FOUND_CONFIG -eq 0 ]; then
	echo "config.py not found in argument list"
	exit 1
fi

# check if config.py is using VarParsing (backward compatibility)
SEP='--'
if grep -q "VarParsing" "$CONFIG_FILE"; then
	SEP=
fi

EXITMARKER="cmsRunCLIexit"
($CMS_EXE ${CMS_OPTS[@]} $SEP ${CONFIG_OPTS[@]} || echo "${EXITMARKER}$?") |& awk -v exitmarker=${EXITMARKER} '
BEGIN {
	waiting=0;
	sysexit=1;
	exitcode=0;
}
{
	if(sysexit!=0 && index($0,exitmarker)!=0){
		exitcode=substr($0,length(exitmarker)+1);
	}
	else{
		if(index($0,"Fatal Exception")!=0){
			waiting=1;
		}
		if(waiting==0){
			print($0);
		}
		else{
			a[NR]=$0;
			if(index($0,"SystemExit: 0")!=0){
				sysexit=0;
			}
		}
	}
}
END {
	if(sysexit!=0){
		for(i in a){
			print a[i] > "/dev/stderr";
		}
	}
	exit exitcode;
}
'
